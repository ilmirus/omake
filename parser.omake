// Omake meta programming language compiler.
// Copyright (C) 2018  Ilmir Usmanov
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.


module `omake.parser`

import {
  `omake.lexer`
}

data File(module_str: Token.Raw?,
          imports: Token.Raw[],
          declarations: Declaration[])

file : (Input) -> File
     | module_str?:m imports*:i declaration*:d -> `File(m, i, d)`

module_str : (Input) -> Token.Raw
           | Token.NewLine* Token.Module Token.Raw:r -> `r`

imports : (Input) -> Token.Raw[]
        | Token.NewLine* Token.Import Token.LeftBrace import_raw_str*:i Token.RightBrace -> `i`

import_raw_str : (Input) -> Token.Raw
               | Token.NewLine* Token.Raw:r -> `r`

data Declaration | Data(Data) | Rule(Rule)

declaration : (Input) -> Declaration
            | match_data -> `Declaration.Data(result)`
            | rule       -> `Declaration.Rule(result)`

data Data(name: Token.Identifier,
          fields: DataField[],
          methods: DataMethod[],
          values: DataValue[])

match_data : (Input) -> Data
           | Token.NewLine* Token.Data Token.Identifier:i fields?:f methods?:m values?:v -> `Data(i, f, m, v)`


